// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/at/attendance/{id}": {
            "get": {
                "description": "指定されたIDの出席情報を取得",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "出席情報を取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attendance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance",
                        "schema": {
                            "$ref": "#/definitions/models.Attendance"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "指定されたIDの出席情報を削除",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "出席情報を削除",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attendance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "削除に成功しました",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/at/{cid}/{uid}/{csid}": {
            "post": {
                "description": "出席情報を作成または更新",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "出席情報を作成または更新",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Class Schedule ID",
                        "name": "csid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "作成または更新に成功しました",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/at/{classID}": {
            "get": {
                "description": "クラスの全ての出席情報を取得",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "クラスの全ての出席情報を取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "classID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Attendance"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/google/callback": {
            "get": {
                "description": "Googleログイン後にコールバックで受け取ったコードを使用してユーザー情報を取得し、ユーザー情報を基にトークンを生成します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GoogleAuth"
                ],
                "summary": "Googleログイン認証のコールバック処理",
                "operationId": "google-auth-callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Googleから返された認証コード",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "認証成功時、アクセストークン、リフレッシュトークン、ユーザー情報を返す",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ユーザー情報の取得に失敗",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/google/login": {
            "get": {
                "description": "ユーザーをGoogleのログインページへリダイレクトして認証を行います。",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "GoogleAuth"
                ],
                "summary": "Googleのログインページへリダイレクトします。",
                "operationId": "google-login-handler",
                "responses": {
                    "302": {
                        "description": "Googleのログインページへのリダイレクト"
                    }
                }
            }
        },
        "/cb": {
            "get": {
                "description": "cidに基づいて、グループの全ての掲示板を取得します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Board"
                ],
                "summary": "全てのグループ掲示板を取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "全てのグループ掲示板のリスト",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.ClassBoard"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "クラス掲示板を作成します。",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Board"
                ],
                "summary": "クラス掲示板を作成",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class board title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Class board content",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Is announced",
                        "name": "is_announced",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Upload image file",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Class board created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ClassBoard"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cb/announced": {
            "get": {
                "description": "cidに基づいて、公告されたグループの掲示板を取得します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Board"
                ],
                "summary": "公告されたグループ掲示板を取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "公告されたグループ掲示板のリスト",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.ClassBoard"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cb/{id}": {
            "get": {
                "description": "指定されたIDのグループ掲示板の詳細を取得します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Board"
                ],
                "summary": "IDでグループ掲示板を取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "グループ掲示板が取得されました",
                        "schema": {
                            "$ref": "#/definitions/models.ClassBoard"
                        }
                    },
                    "400": {
                        "description": "無効なリクエストです",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "コードが見つかりません",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "指定されたIDのグループ掲示板を削除します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Board"
                ],
                "summary": "グループ掲示板を削除",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "クラス掲示板が正常に削除されました",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "コードが見つかりません",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "指定されたIDのグループ掲示板の詳細を更新します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Board"
                ],
                "summary": "グループ掲示板を更新",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "クラス掲示板の更新",
                        "name": "class_board_update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClassBoardUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "グループ掲示板が正常に更新されました",
                        "schema": {
                            "$ref": "#/definitions/models.ClassBoard"
                        }
                    },
                    "400": {
                        "description": "リクエストが不正です",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "コードが見つかりません",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cc/checkSecretExists": {
            "get": {
                "description": "指定されたグループコードにシークレットがあるかどうかをチェックする。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Code"
                ],
                "summary": "グループコードにシークレットが存在するかチェック",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code to check",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "secretExists\" \"シークレットが存在します",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "無効なリクエストです",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "コードが見つかりません",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cc/verifyClassCode": {
            "get": {
                "description": "グループコードと、該当する場合はそのシークレットを確認する。また、指定されたユーザーに役割を割り当てる。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Code"
                ],
                "summary": "グループコードとシークレットを検証＆ユーザーに役割を割り当てる",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code to verify",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret for the code",
                        "name": "secret",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "User ID to assign role",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "グループコードが検証されました",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "無効なリクエストです",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "シークレットが一致しません",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "コードが見つかりません",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cs": {
            "get": {
                "description": "指定されたクラスIDの全てのクラススケジュールを取得する。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Schedule"
                ],
                "summary": "全てのクラススケジュールを取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "クラススケジュールが見つかりました",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.ClassSchedule"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "新しいクラススケジュールを作成する。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Schedule"
                ],
                "summary": "クラススケジュールを作成",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Class schedule to create",
                        "name": "classSchedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClassScheduleDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "クラススケジュールが正常に作成されました",
                        "schema": {
                            "$ref": "#/definitions/models.ClassSchedule"
                        }
                    },
                    "400": {
                        "description": "リクエストが不正です",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cs/date": {
            "get": {
                "description": "指定されたクラスIDと日付のクラススケジュールを取得する。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Schedule"
                ],
                "summary": "日付でクラススケジュールを取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "指定された日付のクラススケジュールが見つかりました",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.ClassSchedule"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "日付が必要です",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cs/live": {
            "get": {
                "description": "指定されたクラスIDのライブ中のクラススケジュールを取得する。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Schedule"
                ],
                "summary": "ライブ中のクラススケジュールを取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ライブ中のクラススケジュールが見つかりました",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.ClassSchedule"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cs/{id}": {
            "get": {
                "description": "指定されたIDのクラススケジュールを取得する。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Schedule"
                ],
                "summary": "IDでクラススケジュールを取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "クラススケジュールが見つかりました",
                        "schema": {
                            "$ref": "#/definitions/models.ClassSchedule"
                        }
                    },
                    "400": {
                        "description": "無効なID形式です",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "クラススケジュールが見つかりません",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "指定されたIDのクラススケジュールを更新する。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Schedule"
                ],
                "summary": "クラススケジュールを更新",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Class schedule to update",
                        "name": "classSchedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateClassScheduleDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "クラススケジュールが正常に更新されました",
                        "schema": {
                            "$ref": "#/definitions/models.ClassSchedule"
                        }
                    },
                    "400": {
                        "description": "リクエストが不正です",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "指定されたIDのクラススケジュールを削除する。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Schedule"
                ],
                "summary": "クラススケジュールを削除",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "クラススケジュールが正常に削除されました",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "無効なID形式です",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cu/{uid}/{cid}/rename": {
            "put": {
                "description": "特定のユーザーIDとグループIDに対してユーザーの名前を更新します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class User"
                ],
                "summary": "ユーザーの名前を更新します。",
                "operationId": "update-user-name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "新しいニックネーム",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateUserNameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cu/{uid}/{cid}/{role}": {
            "patch": {
                "description": "ユーザーのロールを変更します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class User"
                ],
                "summary": "ユーザーのロールを変更します。",
                "operationId": "change-user-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role Name",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "サーバーエラーが発生しました",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.UpdateUserNameRequest": {
            "type": "object",
            "properties": {
                "new_name": {
                    "type": "string"
                }
            }
        },
        "dto.ClassBoardUpdateDTO": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "is_announced": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.ClassScheduleDTO": {
            "type": "object",
            "required": [
                "cid",
                "ended_at",
                "started_at",
                "title"
            ],
            "properties": {
                "cid": {
                    "type": "integer"
                },
                "ended_at": {
                    "type": "string"
                },
                "is_live": {
                    "type": "boolean"
                },
                "started_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateClassScheduleDTO": {
            "type": "object",
            "properties": {
                "ended_at": {
                    "type": "string"
                },
                "is_live": {
                    "type": "boolean"
                },
                "started_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Attendance": {
            "type": "object",
            "properties": {
                "cid": {
                    "description": "Class ID",
                    "type": "integer"
                },
                "classSchedule": {
                    "$ref": "#/definitions/models.ClassSchedule"
                },
                "classUser": {
                    "$ref": "#/definitions/models.ClassUser"
                },
                "csid": {
                    "description": "Class Schedule ID",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "isAttendance": {
                    "description": "出席, 遅刻, 欠席",
                    "type": "string"
                },
                "uid": {
                    "description": "User ID",
                    "type": "integer"
                }
            }
        },
        "models.Class": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "limitation": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ClassBoard": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer"
                },
                "class": {
                    "$ref": "#/definitions/models.Class"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isAnnounced": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "uid": {
                    "description": "User ID",
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.ClassSchedule": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer"
                },
                "class": {
                    "$ref": "#/definitions/models.Class"
                },
                "endedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isLive": {
                    "type": "boolean"
                },
                "startedAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.ClassUser": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer"
                },
                "class": {
                    "$ref": "#/definitions/models.Class"
                },
                "isFavorite": {
                    "type": "boolean"
                },
                "nickname": {
                    "type": "string"
                },
                "roleID": {
                    "type": "integer"
                },
                "uid": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
